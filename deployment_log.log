executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.CloneGit:REPOSITORY_PATH is:: /vagrant/docker/CloneGit:Git clone from stderr:: Cloning into 'ReverseProxyConfig'...
CloneGit:Git clone from stderr:: fCloneGit:Git clone from stderr:: atal: CloneGit:Git clone from stderr:: RCloneGit:Git clone from stderr:: emote branch [object Object],[object Object],[object Object] not found in upstream origin
executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.CloneGit:REPOSITORY_PATH is:: /vagrant/docker/CloneGit:Git clone from stderr:: Cloning into 'ReverseProxyConfig'...
CloneGit:Done git clone
deployProject:dockerComposeCommand.stderr::Creating network "reverseproxyconfig_default" with the default driver
deployProject:dockerComposeCommand.stderr::Building site2
deployProject:dockerComposeCommand.stdout::Step 1 : FROM mhart/alpine-node:6.3.0
deployProject:dockerComposeCommand.stdout:: ---> fffb49210fed
deployProject:dockerComposeCommand.stdout::Step 2 : RUN npm install -g http-server
deployProject:dockerComposeCommand.stdout:: ---> Using cache
deployProject:dockerComposeCommand.stdout:: ---> 152249e987f4
deployProject:dockerComposeCommand.stdout::Step 3 : COPY index.html .
deployProject:dockerComposeCommand.stdout:: ---> Using cache
deployProject:dockerComposeCommand.stdout:: ---> 23575874b8e1
deployProject:dockerComposeCommand.stdout::Step 4 : CMD http-server --port 8080
deployProject:dockerComposeCommand.stdout:: ---> Using cache
deployProject:dockerComposeCommand.stdout:: ---> 883250ee6737
deployProject:dockerComposeCommand.stdout::Successfully built 883250ee6737
deployProject:dockerComposeCommand.stderr::Building site1
deployProject:dockerComposeCommand.stdout::Step 1 : FROM mhart/alpine-node:6.3.0
deployProject:dockerComposeCommand.stdout:: ---> fffb49210fed
deployProject:dockerComposeCommand.stdout::Step 2 : RUN npm install -g http-server
deployProject:dockerComposeCommand.stdout:: ---> Using cache
deployProject:dockerComposeCommand.stdout:: ---> 152249e987f4
deployProject:dockerComposeCommand.stdout::Step 3 : COPY index.html .
deployProject:dockerComposeCommand.stdout:: ---> f8e781799c3d
deployProject:dockerComposeCommand.stdout:: ---> Using cache
deployProject:dockerComposeCommand.stdout:: ---> daef4fc19833
deployProject:dockerComposeCommand.stdout::Step 4 : CMD http-server --port 8080
deployProject:dockerComposeCommand.stdout:: ---> Using cache
deployProject:dockerComposeCommand.stdout::Successfully built daef4fc19833
deployProject:dockerComposeCommand.stderr::Building proxy
deployProject:dockerComposeCommand.stdout::Step 1 : FROM smebberson/alpine-nginx:3.0.0
deployProject:dockerComposeCommand.stdout:: ---> 5473ded7a8f3
deployProject:dockerComposeCommand.stdout::Step 2 : ADD root /
deployProject:dockerComposeCommand.stdout:: ---> Using cache
deployProject:dockerComposeCommand.stdout:: ---> b11b41ad6789
deployProject:dockerComposeCommand.stdout::Successfully built b11b41ad6789
deployProject:dockerComposeCommand.stderr::Creating reverseproxyconfig_site1_1
deployProject:dockerComposeCommand.stderr::Creating reverseproxyconfig_site2_1
deployProject:dockerComposeCommand.stderr::Creating reverseproxyconfig_proxy_1
Closer of docker compose.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.CloneGit:REPOSITORY_PATH is:: /vagrant/docker/CloneGit:Git clone from stderr:: Cloning into 'ReverseProxyConfig'...
executing body-parser.executing body-parser.CloneGit:REPOSITORY_PATH is:: /vagrant/docker/CloneGit:Git clone from stderr:: Cloning into 'ReverseProxyConfig'...
CloneGit:Done git clone
deployProject:dockerComposeCommand.stderr::Building site2
deployProject:dockerComposeCommand.stdout::Step 1 : FROM mhart/alpine-node:6.3.0
deployProject:dockerComposeCommand.stdout:: ---> fffb49210fed
deployProject:dockerComposeCommand.stdout::Step 2 : RUN npm install -g http-server
deployProject:dockerComposeCommand.stdout:: ---> Using cache
deployProject:dockerComposeCommand.stdout:: ---> 152249e987f4
Step 3 : COPY index.html .
 ---> Using cache
 ---> 23575874b8e1
Step 4 : CMD http-server --port 8080
deployProject:dockerComposeCommand.stdout:: ---> Using cache
 ---> 883250ee6737
deployProject:dockerComposeCommand.stdout::Successfully built 883250ee6737
deployProject:dockerComposeCommand.stderr::Building site1
deployProject:dockerComposeCommand.stdout::Step 1 : FROM mhart/alpine-node:6.3.0
deployProject:dockerComposeCommand.stdout:: ---> fffb49210fed
deployProject:dockerComposeCommand.stdout::Step 2 : RUN npm install -g http-server
deployProject:dockerComposeCommand.stdout:: ---> Using cache
deployProject:dockerComposeCommand.stdout:: ---> 152249e987f4
deployProject:dockerComposeCommand.stdout::Step 3 : COPY index.html .
deployProject:dockerComposeCommand.stdout:: ---> Using cache
deployProject:dockerComposeCommand.stdout:: ---> f8e781799c3d
deployProject:dockerComposeCommand.stdout::Step 4 : CMD http-server --port 8080
deployProject:dockerComposeCommand.stdout:: ---> Using cache
deployProject:dockerComposeCommand.stdout:: ---> daef4fc19833
deployProject:dockerComposeCommand.stdout::Successfully built daef4fc19833
deployProject:dockerComposeCommand.stderr::Building proxy
deployProject:dockerComposeCommand.stdout::Step 1 : FROM smebberson/alpine-nginx:3.0.0
deployProject:dockerComposeCommand.stdout:: ---> 5473ded7a8f3
deployProject:dockerComposeCommand.stdout::Step 2 : ADD root /
deployProject:dockerComposeCommand.stdout:: ---> Using cache
deployProject:dockerComposeCommand.stdout:: ---> b11b41ad6789
deployProject:dockerComposeCommand.stdout::Successfully built b11b41ad6789
deployProject:dockerComposeCommand.stderr::reverseproxyconfig_site2_1 is up-to-date
deployProject:dockerComposeCommand.stderr::reverseproxyconfig_site1_1 is up-to-date
deployProject:dockerComposeCommand.stderr::reverseproxyconfig_proxy_1 is up-to-date
Closer of docker compose.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.CloneGit:REPOSITORY_PATH is:: /vagrant/docker/CloneGit:Git clone from stderr:: Cloning into 'ReverseProxyConfig'...
executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.CloneGit:REPOSITORY_PATH is:: /vagrant/docker/CloneGit:Git clone from stderr:: Cloning into 'ReverseProxyConfig'...
CloneGit:Done git clone
deployProject:dockerComposeCommand.stderr::Building site2
deployProject:dockerComposeCommand.stdout::Step 1 : FROM mhart/alpine-node:6.3.0
deployProject:dockerComposeCommand.stdout:: ---> fffb49210fed
deployProject:dockerComposeCommand.stdout::Step 2 : RUN npm install -g http-server
deployProject:dockerComposeCommand.stdout:: ---> Using cache
deployProject:dockerComposeCommand.stdout:: ---> 152249e987f4
deployProject:dockerComposeCommand.stdout::Step 3 : COPY index.html .
deployProject:dockerComposeCommand.stdout:: ---> Using cache
deployProject:dockerComposeCommand.stdout:: ---> 23575874b8e1
deployProject:dockerComposeCommand.stdout::Step 4 : CMD http-server --port 8080
deployProject:dockerComposeCommand.stdout:: ---> Using cache
deployProject:dockerComposeCommand.stdout:: ---> 883250ee6737
deployProject:dockerComposeCommand.stdout::Successfully built 883250ee6737
deployProject:dockerComposeCommand.stderr::Building site1
deployProject:dockerComposeCommand.stdout::Step 1 : FROM mhart/alpine-node:6.3.0
deployProject:dockerComposeCommand.stdout:: ---> fffb49210fed
deployProject:dockerComposeCommand.stdout::Step 2 : RUN npm install -g http-server
deployProject:dockerComposeCommand.stdout:: ---> Using cache
deployProject:dockerComposeCommand.stdout:: ---> 152249e987f4
deployProject:dockerComposeCommand.stdout::Step 3 : COPY index.html .
deployProject:dockerComposeCommand.stdout:: ---> Using cache
deployProject:dockerComposeCommand.stdout:: ---> f8e781799c3d
deployProject:dockerComposeCommand.stdout::Step 4 : CMD http-server --port 8080
deployProject:dockerComposeCommand.stdout:: ---> Using cache
deployProject:dockerComposeCommand.stdout:: ---> daef4fc19833
deployProject:dockerComposeCommand.stdout::Successfully built daef4fc19833
deployProject:dockerComposeCommand.stderr::Building proxy
deployProject:dockerComposeCommand.stdout::Step 1 : FROM smebberson/alpine-nginx:3.0.0
deployProject:dockerComposeCommand.stdout:: ---> 5473ded7a8f3
deployProject:dockerComposeCommand.stdout::Step 2 : ADD root /
deployProject:dockerComposeCommand.stdout:: ---> Using cache
deployProject:dockerComposeCommand.stdout:: ---> b11b41ad6789
deployProject:dockerComposeCommand.stdout::Successfully built b11b41ad6789
deployProject:dockerComposeCommand.stderr::reverseproxyconfig_site2_1 is up-to-date
deployProject:dockerComposeCommand.stderr::reverseproxyconfig_site1_1 is up-to-date
deployProject:dockerComposeCommand.stderr::reverseproxyconfig_proxy_1 is up-to-date
Closer of docker compose.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.